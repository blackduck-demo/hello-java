# example pipeline for Black Duck scans using the Synopsys Security Scan extension for ADO
# https://marketplace.visualstudio.com/items?itemName=synopsys-security-scan.synopsys-security-scan
trigger:
- main
- develop
pool:
  vmImage: ubuntu-latest
variables:
  - group: poc357.blackduck.synopsys.com
steps:
- task: JavaToolInstaller@0
  displayName: 'Use Java 17'
  inputs:
    versionSpec: 17
    jdkArchitectureOption: x64
    jdkSourceOption: PreInstalled
- task: Maven@4
  displayName: 'Maven Build'
  inputs:
    options: '-B -DskipTests'
- task: SynopsysSecurityScan@1
  displayName: 'Black Duck Full Scan'
  condition: not(eq(variables['Build.Reason'], 'PullRequest'))
  env:
    DETECT_PROJECT_NAME: $(Build.Repository.Name)
    DETECT_PROJECT_VERSION_NAME: $(Build.SourceBranchName)
    DETECT_CODE_LOCATION_NAME: $(Build.Repository.Name)-$(Build.SourceBranchName)
  inputs:
    blackduck_url: $(BLACKDUCK_URL)
    blackduck_token: $(BLACKDUCK_API_TOKEN)
    blackduck_scan_full: true
    blackduck_scan_failure_severities: 'BLOCKER'
    blackduck_fixpr_enabled: true
    blackduck_reports_sarif_create: true
    azure_token: $(System.AccessToken)
    # include_diagnostics: true
- task: SynopsysSecurityScan@1
  displayName: 'Black Duck PR Scan'
  condition: eq(variables['Build.Reason'], 'PullRequest')
  env:
    DETECT_PROJECT_NAME: $(Build.Repository.Name)
    DETECT_PROJECT_VERSION_NAME: $(System.PullRequest.targetBranchName)
    DETECT_CODE_LOCATION_NAME: $(Build.Repository.Name)-$(System.PullRequest.targetBranchName)
  inputs:
    blackduck_url: $(BLACKDUCK_URL)
    blackduck_token: $(BLACKDUCK_API_TOKEN)
    blackduck_scan_full: false
    blackduck_prcomment_enabled: true
    azure_token: $(System.AccessToken)
    # include_diagnostics: true
- task: ArchiveFiles@2
  displayName: 'Copy Log Files'
  condition: succeededOrFailed()
  enabled: false
  inputs:
    rootFolderOrFile: .bridge
    includeRootFolder: false
    archiveFile: '$(Build.ArtifactStagingDirectory)/bridge-logs.zip'
- task: PublishBuildArtifacts@1
  displayName: 'Publish Log Files'
  condition: succeededOrFailed()
  enabled: false
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)'
    ArtifactName: 'logs'
